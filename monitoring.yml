---
name: monitoring

services:
  blackbox:
    image: prom/blackbox-exporter
    configs:
      - source: blackbox.config.yml
        target: /etc/blackbox_exporter/config.yml
    ports:
      - 9115:9115
    pull_policy: build
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    configs:
      - source: grafana.custom.ini
        target: /etc/grafana/custom.ini
      - source: grafana.prometheus.yml
        target: /etc/grafana/provisioning/datasources/prometheus.yml
    environment:
      GF_PATHS_CONFIG: /etc/grafana/custom.ini
    ports:
      - 3000:3000
    pull_policy: build
    restart: unless-stopped
    user: root
    volumes:
      - /usr/builtin/etc/certificate:/certs:ro
      - /share/Docker/monitoring/grafana:/var/lib/grafana:rw

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.config.file=/etc/prometheus/web_config.yml
    configs:
      - source: prometheus.prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - source: prometheus.web_config.yml
        target: /etc/prometheus/web_config.yml
    ports:
      - 9090:9090
    pull_policy: build
    restart: unless-stopped
    user: root
    volumes:
      - /usr/builtin/etc/certificate:/certs:ro
      - /share/Docker/monitoring/prometheus:/prometheus:rw

configs:
  blackbox.config.yml:
    content: |
      ---
      modules:
        http_2xx:
          http:
            fail_if_not_ssl: true
            method: GET
            preferred_ip_protocol: ip4
            valid_http_versions:
              - HTTP/1.1
              - HTTP/2.0
            valid_status_codes:
              - 200
              - 401
          prober: http
          timeout: 15s
        http_post_2xx:
          http:
            method: POST
          prober: http
        icmp_ping:
          prober: icmp
          icmp:
            preferred_ip_protocol: ip4

  grafana.custom.ini:
    content: |
      [server]
      protocol = https
      root_url = https://store.local.reiciunas.dev:3000/
      cert_file = /certs/ssl.pem
      cert_key = /certs/ssl.key

  grafana.prometheus.yml:
    content: |
      ---
      apiVersion: 1
      datasources:
        - name: prometheus
          type: prometheus
          orgId: 1
          updateIntervalSeconds: 30
          url: https://store.local.reiciunas.dev:9090
          jsonData:
            tlsSkipVerify: true

  prometheus.prometheus.yml:
    content: |
      ---
      global:
        # Set the scrape interval to every 15 seconds. Default is every 1 minute.
        scrape_interval: 15s
        # Evaluate rules every 15 seconds. The default is every 1 minute.
        evaluation_interval: 15s
        # scrape_timeout is set to the global default (10s).

      scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped
        # from this config.
        - job_name: blackbox
          metrics_path: /probe
          params:
            module:
              - http_2xx

          relabel_configs:
            - source_labels:
                - __address__
              target_label: __param_target
            - source_labels:
                - __param_target
              target_label: instance
            - target_label: __address__
              replacement: blackbox:9115

        - job_name: node

          static_configs:
            - targets:
                - 10.16.0.115:9100
              labels:
                instance: aws-mysql01
            - targets:
                - 10.16.4.50:9100
              labels:
                instance: aws-vpn01
            - targets:
                - 10.16.4.129:9100
              labels:
                instance: aws-web01
            - targets:
                - 100.85.71.13:9100
              labels:
                instance: fh01
            - targets:
                - 192.168.68.3:9100
              labels:
                instance: store

        - job_name: prometheus

          scheme: https

          static_configs:
            - targets:
                - localhost:9090
              labels:
                instance: prometheus

          tls_config:
            insecure_skip_verify: true

        - job_name: wcac

          scheme: http

          static_configs:
            - targets:
                - 192.168.68.32:30800

  prometheus.web_config.yml:
    content: |
      ---
      # basic_auth_users:
      #   prometheus: sha

      http_server_config:
        http2: true

      tls_server_config:
        cert_file: /certs/ssl.pem
        key_file: /certs/ssl.key
        min_version: TLS12
